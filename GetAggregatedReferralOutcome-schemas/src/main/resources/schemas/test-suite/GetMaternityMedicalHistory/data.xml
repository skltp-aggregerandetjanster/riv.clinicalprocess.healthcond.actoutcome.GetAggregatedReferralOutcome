<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. Sveriges Kommuner och Landsting licenses this file
to you under the Apache License, Version 2.0 (the
        "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
-->
<testsuite>
    <id>GetMaternityMedicalHistory</id>
    <description>This testsuite is designed to verify the GetMaternityMedicalHistory contract prior to integration with the national platform.</description>
    <globaldata>
        <webServiceUrl>http://localhost:8088/mockGetMaternityMedicalHistoryResponderBinding</webServiceUrl>
    </globaldata>
    <testcase id="Date Boundaries">
        <description>Verifies that the result only contains information within the date boundaries for the given patient.<br/>
            This test will require at least eight MaternityMedicalRecords:
            <ol>
                <li>A record with DocumentTime within the given range, the AuthorTime and SignatureTime
                before or after the given range.</li>
                <li>A record with AuthorTime within the given range, the DocumentTime and SignatureTime
                before or after the given range.</li>
                <li>A record with SignatureTime within the given range, the DocumentTime and AuthorTime
                before or after the given range.</li>
                <li>A record with DocumentTime and AuthorTime within the given range, the SignatureTime
                before or after the given range.</li>
                <li>A record with DocumentTime and SignatureTime within the given range, the AuthorTime
                before or after the given range.</li>
                <li>A record with SignatureTime and AuthorTime within the given range, the DocumentTime
                before or after the given range.</li>
                <li>A record with SignatureTime, DocumentTime and AuthorTime within the given range.</li>
                <li>A record with SignatureTime, DocumentTime and AuthorTime outside the given range.</li>
            </ol>
            Add he DocumentId's of case 1-7 as a comma-separated list in the expectedDocumentIds field.<br/>
            Add the DocumentId's of case 8 in the unexpectedDocumentIds field.<br/>
            The fields httpHeaderHsaId and logicalAddress must contain values that do not affect the list of MaternityMedicalRecords.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601011212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <timePeriodStart>20130701</timePeriodStart>
            <timePeriodEnd>20130731</timePeriodEnd>
            <!-- Add a list of comma-separated ids that will be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that will not be included in the response -->
            <unexpectedDocumentIds>11,12,13</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="CareUnitHsaId Filter">
        <description>Verifies that the result only contains information with correct CareUnitHsaId for the given patient.<br/>
            The patient should have several MaternityMedicalRecords, with at least one record from the given CareUnitHsaId.<br/>
            The DocumentId's of the expected MaternityMedicalRecords must be added as a comma-separated list in the
            expectedDocumentIds field.<br/>
            The DocumentId's of MaternityMedicalRecords from other CareUnit's must be added as a comma-separated list in the
            unexpectedDocumentIds field.<br/>
            The fields httpHeaderHsaId and logicalAddress must contain values that do not affect the list of MaternityMedicalRecords.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <careUnitHSAid>123465</careUnitHSAid>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <sourceSystemHSAid>112233</sourceSystemHSAid>
            <!-- Add a list of comma-separated ids that will be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that will not be included in the response -->
            <unexpectedDocumentIds>123456</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="Only PatientId">
        <description>Verifies that the result only contains information with correct PatientId.
            Enter a PatientId that is stored in the source system.<br/>
            Add the DocumentId's of the expected MaternityMedicalRecords as a comma-separated list in the
            expectedDocumentIds field.<br/>
            Add the DocumentId's of MaternityMedicalRecords from other CareUnit's as a comma-separated list in the
            unexpectedDocumentIds field.<br/>
            The fields httpHeaderHsaId and logicalAddress must contain values that do not affect the list of MaternityMedicalRecords.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <!-- Add a list of comma-separated ids that will be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that will not be included in the response -->
            <unexpectedDocumentIds>123456</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="NonExisting PatientId">
        <description>Verifies that the service returns an empty result instead of a Soap Fault if a non-existing PatientId is given.<br/>
            Enter a PatientId that is not found in the source system.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>1234567890</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
        </data>
    </testcase>
    <testcase id="CareContactId Filter">
        <description>Verifies that the result only contains information for a single CareContact.<br/>
            Enter a PatientId, CareContactId and SourceSystemHSAid that is stored in the source system.<br/>
            The fields httpHeaderHsaId and logicalAddress must contain values that do not affect the list of MaternityMedicalRecords.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>566710</careContactId>
            <sourceSystemHSAid>12</sourceSystemHSAid>
        </data>
    </testcase>
    <testcase id="NonExisting CareContactId">
        <description>Verifies that the service returns an empty result instead of a Soap Fault if a non-existing
            CareContactId is given.<br/>
            Enter a PatientId that exists in the source system and a CareContactId and sourceSystemHSAid that is not found in the source system.<br/>
            The fields httpHeaderHsaId and logicalAddress must contain values that do not affect the list of MaternityMedicalRecords.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>1122334455</careContactId>
            <sourceSystemHSAid>112233</sourceSystemHSAid>
        </data>
    </testcase>
    <testcase id="Http-header Filter">
        <description>Verifies that the result only contains information with correct PatientId, and that the source
            system filters MaternityMedicalRecords based on the HttpHeader 'x-rivta-original-serviceconsumer-hsaid'.<br/>
            This testcase can be recorded as not applicable if this kind of filtering does not take place in the tested system.<br/>
            Enter a PatientId that has more than one MaternityMedicalRecord in the source system.<br/>
            Add one or more CareUnitIds that must be included in the response based on the
            filtering rules to the field 'expectedCareUnitIds'.<br/>
            Add one or more CareUnitIds of records that must not be included in the response based on the
            filtering rules to the field 'unexpectedCareUnitIds'.<br/>
            The field logicalAddress must contain a value that does not affect the list of MaternityMedicalRecords.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <!-- Add a list of comma-separated ids that will be included in the response -->
            <expectedCareUnitIds>4711,4712</expectedCareUnitIds>
            <!-- Add a list of comma-separated ids that will not be included in the response -->
            <unexpectedCareUnitIds>123456</unexpectedCareUnitIds>
        </data>
    </testcase>
    <testcase id="CareContactId and SourceSystemHsaId">
        <description>The test verifies that the source system returns a Soap Fault if the sourceSystemHSAid
            is empty when careContactId has a value.<br/>
            Enter a PatientId and a CareContactId of a CareContact that is found in the source system.<br/>
            The fields httpHeaderHsaId and logicalAddress must contain values that do not affect the list of MaternityMedicalRecords.</description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>1122334455</careContactId>
        </data>
    </testcase>
    <testcase id="SourceSystemHsaId and LogicalAddress">
        <description>The test verifies that the source system returns a Soap Fault if the logicalAddress and
            sourceSystemHSAid doesn't match.<br/>
            Enter PatientId and a CareContactId and the correct SourceSystemHSAid of a CareContact that is found in the source system.<br/>
            The field logicalAddress must not match SourceSystemHSAid.<br/>
            The field httpHeaderHsaId must contain a value that does not affect the list of records.</description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>987654321</logicalAddress>
            <careUnitHSAid>1123465</careUnitHSAid>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>1122334455</careContactId>
            <sourceSystemHSAid>112233</sourceSystemHSAid>
        </data>
    </testcase>
</testsuite>